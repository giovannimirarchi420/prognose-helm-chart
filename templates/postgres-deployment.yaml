{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    {{- include "prognose.labels" (dict "context" . "component" "postgresql") | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "prognose.selectorLabels" (dict "context" . "component" "postgresql") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "prognose.selectorLabels" (dict "context" . "component" "postgresql") | nindent 8 }}
    spec:
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: IfNotPresent
          
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-postgres-secret
            - configMapRef:
                name: {{ .Release.Name }}-postgres-config
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          {{- if .Values.postgresql.persistence.enabled }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
          # Add readiness and liveness probes
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h localhost
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h localhost
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
      {{- if .Values.postgresql.persistence.enabled }}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgres-pvc
      {{- end }}
{{- end }}