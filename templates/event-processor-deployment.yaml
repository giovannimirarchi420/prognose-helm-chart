apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-event-processor
  labels:
    {{- include "resource-management.labels" (dict "context" . "component" "event-processor") | nindent 4 }}
spec:
  replicas: {{ .Values.eventProcessor.replicaCount }}
  selector:
    matchLabels:
      {{- include "resource-management.selectorLabels" (dict "context" . "component" "event-processor") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "resource-management.selectorLabels" (dict "context" . "component" "event-processor") | nindent 8 }}
    spec:
      containers:
        - name: event-processor
          image: "{{ .Values.eventProcessor.image.repository }}:{{ .Values.eventProcessor.image.tag }}"
          ports:
            - containerPort: {{ .Values.eventProcessor.containerPort }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.eventProcessor.containerPort }}
            initialDelaySeconds: 70
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.eventProcessor.containerPort }}
            initialDelaySeconds: 90
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-event-processor-config
            - secretRef:
                name: {{ .Release.Name }}-event-processor-secret
          resources:
            {{- toYaml .Values.eventProcessor.resources | nindent 12 }}