apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-be
  labels:
    {{- include "prognose.labels" (dict "context" . "component" "backend") | nindent 4 }}
spec:
  replicas: {{ .Values.be.replicaCount }}
  selector:
    matchLabels:
      {{- include "prognose.selectorLabels" (dict "context" . "component" "backend") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "prognose.selectorLabels" (dict "context" . "component" "backend") | nindent 8 }}
    spec:
      containers:
        - name: backend
          image: "{{ .Values.be.image.repository }}:{{ .Values.be.image.tag }}"
          ports:
            - containerPort: {{ .Values.be.containerPort }}
          readinessProbe:
            httpGet:
              path: /api/actuator/health/readiness
              port: {{ .Values.be.containerPort }}
            initialDelaySeconds: 170
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /api/actuator/health/liveness
              port: {{ .Values.be.containerPort }}
            initialDelaySeconds: 190
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-be-config
            - secretRef:
                name: {{ .Release.Name }}-be-secret
          resources:
            {{- toYaml .Values.be.resources | nindent 12 }}