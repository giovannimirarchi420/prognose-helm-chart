app: prognose
be:
  replicaCount: 1
  image:
    repository: docker.io/g420/prognose-backend
    tag: 1.8.38-postgres # Specify desired backend image version (https://hub.docker.com/repository/docker/g420/resource-management-backend/general)
  containerPort: 8080
  config:
    # If using PostgreSQL, use the -postgresql image
    # If using Oracle DB, use the -oracle image

    # Specify dbUrl only if postgresql.enabled is set to false, as the application will not deploy its own PostgreSQL instance.
    # dbUrl: "<db_url>" # Example Oracle: jdbc:oracle:thin:@//host:port/service_name, 
    # Example Postgres: jdbc:postgresql://host:port/database
    keycloakAuthServerUrl: https://auth.crownlabs.polito.it/auth
    keycloakRealm: prognose
    keycloakClientId: prognose-app
  secrets:
    # Provide dbUser and dbPassword only if postgresql.enabled is set to false, as the application will not deploy its own PostgreSQL instance.
    # dbUser: <db_username>
    # dbPassword: <db_password>
    keycloakClientSecret: <keycloak_client_secret>
  ingress:
    host: prognose.crownlabs.polito.it
    path: /api
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
fe:
  replicaCount: 1
  image:
    repository: docker.io/g420/prognose-frontend
    tag: 1.4.9 # Specify desired frontend image version (https://hub.docker.com/repository/docker/g420/resource-management-frontend/general)
  config:
    keycloakClientId: prognose-fe
  ingress:
    host: prognose.crownlabs.polito.it
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
eventProcessor:
  replicaCount: 1
  image:
    repository: docker.io/g420/reservation-event-processor
    tag: 0.1.15-postgres # Specify desired backend image version (https://hub.docker.com/repository/docker/g420/reservation-event-processor/general) 
  containerPort: 8080
  config:
    keycloakClientId: prognose-app
  secrets:
    keycloakClientSecret: <keycloak_client_secret>
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
# PostgreSQL configuration section
postgresql:
  enabled: true # Set to true to deploy PostgreSQL alongside the application
  image:
    repository: postgres
    tag: "15-alpine" # Specify desired PostgreSQL version
  auth:
    username: prognose_user
    password: <db_password> # Set a secure password for the PostgreSQL user
    database: prognosedb # Default database name
  persistence:
    enabled: true
    storageClass: rook-ceph-block # Specify storage class or leave empty for default
    size: 8Gi # Default PVC size
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1000m
  #   memory: 512Mi
  # requests:
  #   cpu: 500m
  #   memory: 1Gi
